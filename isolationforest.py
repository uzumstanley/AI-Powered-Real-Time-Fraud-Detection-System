# -*- coding: utf-8 -*-
"""IsolationForest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iNdKj4cIZeRLXLenF6EdzHQ1hH4-Kc62

**Isolation Forest (unsupervised anomaly detection) because the dataset did not have a label Is_Fraud colum**
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.ensemble import IsolationForest
import joblib

# Load your data
df = pd.read_csv('/content/drive/MyDrive/FraudDetection/bank_transactions_featured.csv')

# Define features
numeric_cols = [
    "TransactionAmount", "CustomerAge", "TransactionDuration", "LoginAttempts", "AccountBalance",
    "user_transaction_count", "user_avg_transaction_amount", "deviation_from_user_avg",
    "transaction_hour", "transaction_day_of_week"
]
categorical_cols = [
    "TransactionType", "Location", "Channel", "CustomerOccupation", "user_primary_location", "is_unusual_location"
]

# Scale numeric features
scaler = StandardScaler()
X_numeric = scaler.fit_transform(df[numeric_cols])

# One-hot encode categorical features
encoder = OneHotEncoder(sparse_output=False, handle_unknown='ignore')
X_categorical = encoder.fit_transform(df[categorical_cols])

# Combine features
X = np.hstack((X_numeric, X_categorical)).astype(np.float32)

# Train Isolation Forest
iso = IsolationForest(n_estimators=100, max_samples='auto', contamination=0.01, random_state=42)
iso.fit(X)
scores = -iso.decision_function(X)

# Save the encoder and model
joblib.dump(encoder, '/content/drive/MyDrive/FraudDetection/onehot_encoder.pkl')
joblib.dump(iso, '/content/drive/MyDrive/FraudDetection/iso_forest_model.pkl')





